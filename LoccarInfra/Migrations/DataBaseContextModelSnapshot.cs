// <auto-generated />
using System;
using LoccarInfra.ORM.model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LoccarInfra.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LoccarInfra.ORM.model.Customer", b =>
                {
                    b.Property<int>("IdCustomer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idCustomer")
                        .HasDefaultValueSql("nextval('Customer_idCustomer_seq'::regclass)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<bool?>("Locador")
                        .HasColumnType("boolean")
                        .HasColumnName("locador");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("login");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("senha");

                    b.Property<string>("Telefone")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("telefone");

                    b.HasKey("IdCustomer")
                        .HasName("Customer_pkey");

                    b.HasIndex(new[] { "Login" }, "Customer_login_key")
                        .IsUnique();

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("LoccarInfra.ORM.model.Motocicletum", b =>
                {
                    b.Property<int>("IdVehicle")
                        .HasColumnType("integer")
                        .HasColumnName("idVehicle");

                    b.Property<bool?>("Controletracao")
                        .HasColumnType("boolean")
                        .HasColumnName("controletracao");

                    b.Property<bool?>("Freioabs")
                        .HasColumnType("boolean")
                        .HasColumnName("freioabs");

                    b.Property<bool?>("Pilotoautomatico")
                        .HasColumnType("boolean")
                        .HasColumnName("pilotoautomatico");

                    b.HasKey("IdVehicle")
                        .HasName("motocicleta_pkey");

                    b.ToTable("MOTOCICLETA", (string)null);
                });

            modelBuilder.Entity("LoccarInfra.ORM.model.PessoaFisica", b =>
                {
                    b.Property<int>("IdCustomer")
                        .HasColumnType("integer")
                        .HasColumnName("idCustomer");

                    b.Property<bool?>("Contratado")
                        .HasColumnType("boolean")
                        .HasColumnName("contratado");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character(11)")
                        .HasColumnName("cpf")
                        .IsFixedLength();

                    b.Property<string>("EstadoCivil")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("estadoCivil");

                    b.HasKey("IdCustomer")
                        .HasName("pessoa_fisica_pkey");

                    b.HasIndex(new[] { "Cpf" }, "pessoa_fisica_cpf_key")
                        .IsUnique();

                    b.ToTable("PESSOA_FISICA", (string)null);
                });

            modelBuilder.Entity("LoccarInfra.ORM.model.PessoaJuridica", b =>
                {
                    b.Property<int>("IdCustomer")
                        .HasColumnType("integer")
                        .HasColumnName("idCustomer");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character(14)")
                        .HasColumnName("cnpj")
                        .IsFixedLength();

                    b.HasKey("IdCustomer")
                        .HasName("pessoa_juridica_pkey");

                    b.HasIndex(new[] { "Cnpj" }, "pessoa_juridica_cnpj_key")
                        .IsUnique();

                    b.ToTable("PESSOA_JURIDICA", (string)null);
                });

            modelBuilder.Entity("LoccarInfra.ORM.model.Reserva", b =>
                {
                    b.Property<int>("Numeroreserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("numeroreserva")
                        .HasDefaultValueSql("nextval('reserva_numeroreserva_seq'::regclass)");

                    b.Property<DateOnly?>("Dataentrega")
                        .HasColumnType("date")
                        .HasColumnName("dataentrega");

                    b.Property<DateOnly>("Datalocacao")
                        .HasColumnType("date")
                        .HasColumnName("datalocacao");

                    b.Property<int?>("Diarias")
                        .HasColumnType("integer")
                        .HasColumnName("diarias");

                    b.Property<TimeOnly?>("Horaentrega")
                        .HasColumnType("time without time zone")
                        .HasColumnName("horaentrega");

                    b.Property<TimeOnly>("Horalocacao")
                        .HasColumnType("time without time zone")
                        .HasColumnName("horalocacao");

                    b.Property<int>("IdCustomer")
                        .HasColumnType("integer")
                        .HasColumnName("idCustomer");

                    b.Property<int>("IdVehicle")
                        .HasColumnType("integer")
                        .HasColumnName("idVehicle");

                    b.Property<string>("Tipodiaria")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("tipodiaria");

                    b.Property<decimal?>("Valordiaria")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("valordiaria");

                    b.Property<decimal?>("Valorimposto")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("valorimposto");

                    b.Property<decimal?>("Valorsegurocarro")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("valorsegurocarro");

                    b.Property<decimal?>("Valorseguroterceiro")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("valorseguroterceiro");

                    b.HasKey("Numeroreserva")
                        .HasName("reserva_pkey");

                    b.HasIndex("IdCustomer");

                    b.HasIndex("IdVehicle");

                    b.ToTable("RESERVA", (string)null);
                });

            modelBuilder.Entity("LoccarInfra.ORM.model.Vehicle", b =>
                {
                    b.Property<int>("IdVehicle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idVehicle")
                        .HasDefaultValueSql("nextval('Vehicle_idVehicle_seq'::regclass)");

                    b.Property<int?>("Anofabricacao")
                        .HasColumnType("integer")
                        .HasColumnName("anofabricacao");

                    b.Property<int?>("Anomodelo")
                        .HasColumnType("integer")
                        .HasColumnName("anomodelo");

                    b.Property<int?>("Capacidadetanque")
                        .HasColumnType("integer")
                        .HasColumnName("capacidadetanque");

                    b.Property<string>("Marca")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("marca");

                    b.Property<string>("Modelo")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("modelo");

                    b.Property<string>("Renavam")
                        .HasMaxLength(11)
                        .HasColumnType("character(11)")
                        .HasColumnName("renavam")
                        .IsFixedLength();

                    b.Property<decimal?>("Valordiaria")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("valordiaria");

                    b.Property<decimal?>("Valordiariaempresa")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("valordiariaempresa");

                    b.Property<decimal?>("Valordiariamensal")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("valordiariamensal");

                    b.Property<decimal?>("Valordiariareduzida")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("valordiariareduzida");

                    b.HasKey("IdVehicle")
                        .HasName("Vehicle_pkey");

                    b.HasIndex(new[] { "Renavam" }, "Vehicle_renavam_key")
                        .IsUnique();

                    b.ToTable("Vehicle", (string)null);
                });

            modelBuilder.Entity("LoccarInfra.ORM.model.VehicleCarga", b =>
                {
                    b.Property<int>("IdVehicle")
                        .HasColumnType("integer")
                        .HasColumnName("idVehicle");

                    b.Property<decimal?>("Capacidadecarga")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("capacidadecarga");

                    b.Property<string>("Tamanhocompartimentocarga")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("tamanhocompartimentocarga");

                    b.Property<decimal?>("Tara")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("tara");

                    b.Property<string>("Tipocarga")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("tipocarga");

                    b.HasKey("IdVehicle")
                        .HasName("Vehicle_carga_pkey");

                    b.ToTable("Vehicle_CARGA", (string)null);
                });

            modelBuilder.Entity("LoccarInfra.ORM.model.VehiclePassageiro", b =>
                {
                    b.Property<int>("IdVehicle")
                        .HasColumnType("integer")
                        .HasColumnName("idVehicle");

                    b.Property<bool?>("Arcondicionado")
                        .HasColumnType("boolean")
                        .HasColumnName("arcondicionado");

                    b.Property<int?>("Capacidadepassageiro")
                        .HasColumnType("integer")
                        .HasColumnName("capacidadepassageiro");

                    b.Property<bool?>("Direcaohidraulica")
                        .HasColumnType("boolean")
                        .HasColumnName("direcaohidraulica");

                    b.Property<bool?>("Televisao")
                        .HasColumnType("boolean")
                        .HasColumnName("televisao");

                    b.HasKey("IdVehicle")
                        .HasName("Vehicle_passageiro_pkey");

                    b.ToTable("Vehicle_PASSAGEIRO", (string)null);
                });

            modelBuilder.Entity("LoccarInfra.ORM.model.VehiclePasseio", b =>
                {
                    b.Property<int>("IdVehicle")
                        .HasColumnType("integer")
                        .HasColumnName("idVehicle");

                    b.Property<bool?>("Arcondicionado")
                        .HasColumnType("boolean")
                        .HasColumnName("arcondicionado");

                    b.Property<bool?>("Automatico")
                        .HasColumnType("boolean")
                        .HasColumnName("automatico");

                    b.Property<string>("Categoria")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("categoria");

                    b.Property<bool?>("Direcaohidraulica")
                        .HasColumnType("boolean")
                        .HasColumnName("direcaohidraulica");

                    b.HasKey("IdVehicle")
                        .HasName("Vehicle_passeio_pkey");

                    b.ToTable("Vehicle_PASSEIO", (string)null);
                });

            modelBuilder.Entity("LoccarInfra.ORM.model.Motocicletum", b =>
                {
                    b.HasOne("LoccarInfra.ORM.model.Vehicle", "IdVehicleNavigation")
                        .WithOne("Motocicletum")
                        .HasForeignKey("LoccarInfra.ORM.model.Motocicletum", "IdVehicle")
                        .IsRequired()
                        .HasConstraintName("motocicleta_idVehicle_fkey");

                    b.Navigation("IdVehicleNavigation");
                });

            modelBuilder.Entity("LoccarInfra.ORM.model.PessoaFisica", b =>
                {
                    b.HasOne("LoccarInfra.ORM.model.Customer", "IdCustomerNavigation")
                        .WithOne("PessoaFisica")
                        .HasForeignKey("LoccarInfra.ORM.model.PessoaFisica", "IdCustomer")
                        .IsRequired()
                        .HasConstraintName("pessoa_fisica_idCustomer_fkey");

                    b.Navigation("IdCustomerNavigation");
                });

            modelBuilder.Entity("LoccarInfra.ORM.model.PessoaJuridica", b =>
                {
                    b.HasOne("LoccarInfra.ORM.model.Customer", "IdCustomerNavigation")
                        .WithOne("PessoaJuridica")
                        .HasForeignKey("LoccarInfra.ORM.model.PessoaJuridica", "IdCustomer")
                        .IsRequired()
                        .HasConstraintName("pessoa_juridica_idCustomer_fkey");

                    b.Navigation("IdCustomerNavigation");
                });

            modelBuilder.Entity("LoccarInfra.ORM.model.Reserva", b =>
                {
                    b.HasOne("LoccarInfra.ORM.model.Customer", "IdCustomerNavigation")
                        .WithMany("Reservas")
                        .HasForeignKey("IdCustomer")
                        .IsRequired()
                        .HasConstraintName("reserva_idCustomer_fkey");

                    b.HasOne("LoccarInfra.ORM.model.Vehicle", "IdVehicleNavigation")
                        .WithMany("Reservas")
                        .HasForeignKey("IdVehicle")
                        .IsRequired()
                        .HasConstraintName("reserva_idVehicle_fkey");

                    b.Navigation("IdCustomerNavigation");

                    b.Navigation("IdVehicleNavigation");
                });

            modelBuilder.Entity("LoccarInfra.ORM.model.VehicleCarga", b =>
                {
                    b.HasOne("LoccarInfra.ORM.model.Vehicle", "IdVehicleNavigation")
                        .WithOne("VehicleCarga")
                        .HasForeignKey("LoccarInfra.ORM.model.VehicleCarga", "IdVehicle")
                        .IsRequired()
                        .HasConstraintName("Vehicle_carga_idVehicle_fkey");

                    b.Navigation("IdVehicleNavigation");
                });

            modelBuilder.Entity("LoccarInfra.ORM.model.VehiclePassageiro", b =>
                {
                    b.HasOne("LoccarInfra.ORM.model.Vehicle", "IdVehicleNavigation")
                        .WithOne("VehiclePassageiro")
                        .HasForeignKey("LoccarInfra.ORM.model.VehiclePassageiro", "IdVehicle")
                        .IsRequired()
                        .HasConstraintName("Vehicle_passageiro_idVehicle_fkey");

                    b.Navigation("IdVehicleNavigation");
                });

            modelBuilder.Entity("LoccarInfra.ORM.model.VehiclePasseio", b =>
                {
                    b.HasOne("LoccarInfra.ORM.model.Vehicle", "IdVehicleNavigation")
                        .WithOne("VehiclePasseio")
                        .HasForeignKey("LoccarInfra.ORM.model.VehiclePasseio", "IdVehicle")
                        .IsRequired()
                        .HasConstraintName("Vehicle_passeio_idVehicle_fkey");

                    b.Navigation("IdVehicleNavigation");
                });

            modelBuilder.Entity("LoccarInfra.ORM.model.Customer", b =>
                {
                    b.Navigation("PessoaFisica");

                    b.Navigation("PessoaJuridica");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("LoccarInfra.ORM.model.Vehicle", b =>
                {
                    b.Navigation("Motocicletum");

                    b.Navigation("Reservas");

                    b.Navigation("VehicleCarga");

                    b.Navigation("VehiclePassageiro");

                    b.Navigation("VehiclePasseio");
                });
#pragma warning restore 612, 618
        }
    }
}
